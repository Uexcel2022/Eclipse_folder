package DatabaseConnector;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JPasswordField;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;

import java.sql.Connection;

public class SignUp extends JFrame implements ActionListener,ItemListener {

	Color fgColor = Color.YELLOW, bgColor = Color.BLACK;
	Font font;

	JTextField userNameField, firstnameField, lastNameField;
	JPasswordField passwordField, ConfirmpasswordField;
	JButton submit, clear;
	JCheckBox Gender,male,female;
	String status;
//	Statement st2;

	public void homepage() {
		JFrame JF = new JFrame();
		JF.setTitle("Homepage");
		JF.setVisible(true);
		JF.setSize(500, 500);
		JF.setLocationRelativeTo(null);
	}

	public SignUp() {
		font = new Font("Ink Free", Font.ITALIC, 30);
		st2 = Connector.createStatement();

		JPanel northPanel = new JPanel();
		add(northPanel, BorderLayout.NORTH);

		JPanel centerPanel = new JPanel();
		centerPanel.setBackground(bgColor);
		add(centerPanel);

		centerPanel.setLayout(new GridLayout(6, 2));

		centerPanel.add(createLabel("First Name"));
		firstnameField = createTextField();
		centerPanel.add(firstnameField);

		centerPanel.add(createLabel("Last Name"));
		lastNameField = createTextField();
		centerPanel.add(lastNameField);

		centerPanel.add(createLabel("User Name"));
		userNameField = createTextField();
		centerPanel.add(userNameField);

		centerPanel.add(createLabel("Password"));
		passwordField = createPasswordField();
		centerPanel.add(passwordField);

		centerPanel.add(createLabel("ConfirmPassword"));
		ConfirmpasswordField = createPasswordField();
		centerPanel.add(ConfirmpasswordField);
		
//		centerPanel.setLayout(new FlowLayout());
		
		male = checkButton("male");
		centerPanel.add(male);
		 
		
		female = checkButton("female");
		centerPanel.add(female);
		
		ButtonGroup group=new ButtonGroup();
		group.add(male);
		group.add(female);
		
		
		male.addItemListener(this);
        female.addItemListener(this);
		
		JPanel southPanel = new JPanel();
		southPanel.setBackground(Color.BLUE);
		add(southPanel, BorderLayout.SOUTH);

		clear = createButton("Reset");
		southPanel.add(clear);

		submit = createButton("Submit");
		southPanel.add(submit);

		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setTitle("Sign Up");
		setVisible(true);
		pack();
		setSize(500, 500);
		setLocationRelativeTo(null);

	}
	

	private JButton createButton(String txt) {
		JButton btn = new JButton(txt);
		btn.setForeground(fgColor);
		btn.setBackground(bgColor);
		btn.setFont(font);
		btn.setFocusable(false);
		btn.addActionListener(this);

		return btn;
	}
	
	private JCheckBox checkButton(String txt) {
		JCheckBox btn = new JCheckBox(txt);
		font = new Font("sans seriff", Font.ITALIC, 20);
		btn.setFont(font);
		return btn;
	}

	private JTextField createTextField() {
		JTextField txtField = new JTextField(50);
		txtField.setFont(font);
		txtField.setForeground(fgColor);
		txtField.setBackground(bgColor);
		txtField.setCaretColor(Color.CYAN);

		return txtField;
	}

	private JPasswordField createPasswordField() {
		JPasswordField txtField = new JPasswordField(50);
		txtField.setFont(font);
		txtField.setForeground(fgColor);
		txtField.setBackground(bgColor);
		txtField.setCaretColor(Color.CYAN);

		return txtField;
	}

	private JLabel createLabel(String txt) {
		JLabel label = new JLabel(txt);
		label.setFont(font);
		label.setForeground(fgColor);
		label.setHorizontalAlignment(JLabel.CENTER);

		return label;
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == clear) {
			firstnameField.setText("");
			lastNameField.setText("");
			userNameField.setText("");
			passwordField.setText("");
			
		}

		else if (e.getSource() == submit) {

                    if (userNameField.getText().isEmpty() || passwordField.getText().isEmpty())
				return;
			if (!ConfirmpasswordField.getText().equals(passwordField.getText())) {
				JOptionPane.showMessageDialog(null,"Passwors does not match!!");
				passwordField.setText("");
				ConfirmpasswordField.setText("");
				return;
			}

			System.out.println("Username is: " + userNameField.getText());
			homepage();
			String insertValue = String.format("INSERT INTO login VALUES ('%s','%s','%s', '%s', '%s')", firstnameField.getText(), lastNameField.getText(),status,userNameField.getText(),
					passwordField.getText());
			try {
				st2.execute(insertValue);
			} catch (SQLException e1) {
				System.out.println("Error occured..." + e1.getMessage());
			}
		}

	}
	@Override
	public void itemStateChanged(ItemEvent e) {
		if (male.isSelected()) {
			status="male";
		}else if (female.isSelected()) {
			status="Female";
		}else {
			status=null;
		}

	}

	public static void main(String[] args) {
		new SignUp();

	}

	

}
